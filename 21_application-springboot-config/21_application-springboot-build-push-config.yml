trigger:
  - none

parameters:
  - name: BuildTag
    displayName: BuildTag (ex x.x.x)
    type: string
    default: ""

pool:
  vmImage: "ubuntu-latest"

resources:
  repositories:
    - repository: "application-springboot"
      type: github
      ref: main
      endpoint: "20220501"
      name: "oad3/application-springboot"

variables:
  - group: variablegroup

stages:
  - stage: BuildStage
    jobs:
      - job: BuildJob
        displayName: "Gradle Build And Docker Build Push"
        continueOnError: false
        workspace:
          clean: outputs
        steps:
          - checkout: self
          - checkout: application-springboot
            clean: true
          - bash: |
              echo $JAVA_HOME_11_X64
            displayName: "Disp Java Version"
          # - task: Gradle@2
          #   displayName: Gradle Build and Test
          #   inputs:
          #     gradleWrapperFile: "./application-springboot/gradlew"
          #     workingDirectory: "./application-springboot"
          #     tasks: "build test"
          #     publishJUnitResults: true
          #     testResultsFiles: "**/TEST-*.xml"
          #     javaHomeOption: "path"
          #     jdkDirectory: "$(JAVA_HOME_11_X64)"
          #     sonarQubeRunAnalysis: false
          #     spotBugsAnalysis: false
          #   env:
          #     SYSTEM_ACCESSTOKEN: "$(System.AccessToken)"
          # - bash: |
          #     ls -la ./application-springboot/build/libs/
          # - task: Docker@2
          #   displayName: Login to Docker Hub
          #   inputs:
          #     command: login
          #     containerRegistry: "DockerRegistryServiceConnection"
          # - task: Docker@2
          #   displayName: Docker Build and Push
          #   inputs:
          #     Dockerfile: "./application-springboot/Dockerfile"
          #     command: buildAndPush
          #     repository: "oad3jp999/application-springboot"
          #     tags: "${{ parameters.BuildTag }}"
          # - task: Docker@2
          #   displayName: Logout of Docker Hub
          #   inputs:
          #     command: logout
          #     containerRegistry: "DockerRegistryServiceConnection"

  - stage: AfterBuildStage
    jobs:
      - job: AfterBuildJob
        displayName: "Create Manifest based on Build Results"
        continueOnError: false
        workspace:
          clean: outputs
        steps:
          - checkout: self
          - bash: |
              git clone https://$(pass)@github.com/oad3/application-springboot-config.git

              echo ##### ls -la
              ls -la
              cd ./application-springboot-config

              echo chmod 744 ./add_manifest.sh
              chmod 744 ./add_manifest.sh
              ./add_manifest.sh -a oad3jp999\\\/application-springboot ${{ parameters.BuildTag }}
              echo ##### git checkout HEAD -- add_manifest.sh
              git checkout HEAD -- add_manifest.sh

              echo ##### email is "$(email)"
              echo ##### name is "$(name)"
              git config --global user.email "$(email)"
              git config --global user.name "$(name)"

              echo ##### git add ${{ parameters.BuildTag }}
              git add ${{ parameters.BuildTag }}

              echo ##### git status
              git status
              echo ##### git commit -a -m "${{ parameters.BuildTag }}"
              git commit -a -m "${{ parameters.BuildTag }}"
              echo ##### git push https://$(pass)@github.com/oad3/application-springboot-config.git --all
              git push https://$(pass)@github.com/oad3/application-springboot-config.git --all

            displayName: "Create Manifest"
